{"version":3,"sources":["../../src/models/password.js"],"names":["Password","define","id","type","INTEGER","primaryKey","autoIncrement","text","STRING","rank","strength","score","textLength","containsLowercase","BOOLEAN","containsUppercase","containsNumbers","containsSymbols","freezeTableName","classMethods","_create","newPassword","build","testStrength","save","returning","_build","instanceMethods","strengthTester","PasswordStrength","results","check","charsetSize","passwordLength","strengthCode","charsets","lower","upper","number","symbol","prettyStrength","pretty","rankDescription","console","log","apiResult"],"mappings":"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","file":"password.js","sourcesContent":["import Sequelize from 'sequelize';\nimport db from '../db/db';\nimport taiPasswordStrength from 'tai-password-strength';\n\nvar Password = db.define('password', {\n  id: {\n    type: Sequelize.INTEGER,\n    primaryKey: true,\n    autoIncrement: true\n  },\n  text: {\n    type: Sequelize.STRING\n  },\n  rank: {\n    type: Sequelize.INTEGER\n  },\n  strength: {\n    type: Sequelize.STRING\n  },\n  score: {\n    type: Sequelize.INTEGER\n  },\n  textLength: {\n    type: Sequelize.INTEGER\n  },\n  containsLowercase: {\n    type: Sequelize.BOOLEAN\n  },\n  containsUppercase: {\n    type: Sequelize.BOOLEAN\n  },\n  containsNumbers: {\n    type: Sequelize.BOOLEAN\n  },\n  containsSymbols: {\n    type: Sequelize.BOOLEAN\n  }\n}, {\n  freezeTableName: true, // Model tableName will be the same as the model name\n  classMethods: {\n    _create: function(text) {\n      var newPassword = Password.build({\n        text: text\n      });\n\n      newPassword.testStrength();\n      return newPassword.save({returning: true});\n    },\n    _build: function(text) {\n      var newPassword = Password.build({\n        text: text\n      });\n\n      newPassword.testStrength();\n      return newPassword;\n    }\n  },\n  instanceMethods: {\n    testStrength: function() {\n      if(this.text) {\n        var strengthTester = new taiPasswordStrength.PasswordStrength();\n        var results = strengthTester.check(this.text);\n\n        this.rank = this.rank || 0;\n        this.score = results.charsetSize;\n        this.textLength = results.passwordLength;\n        this.strength = results.strengthCode;\n        this.containsLowercase = results.charsets.lower;\n        this.containsUppercase = results.charsets.upper;\n        this.containsNumbers = results.charsets.number;\n        this.containsSymbols = results.charsets.symbol;\n      }\n    },\n    prettyStrength: function () {\n      var pretty = '';\n      if(this.strength === 'VERY_WEAK') {\n        pretty = 'Very Weak';\n      } else if (this.strength === 'WEAK') {\n        pretty = 'Weak';\n      } else if (this.strength === 'REASONABLE') {\n        pretty = 'Ok';\n      } else if (this.strength === 'STRONG') {\n        pretty = 'Strong';\n      } else if (this.strength === 'VERY_STRONG') {\n        pretty = 'Very Strong';\n      }\n      return pretty;\n    },\n    rankDescription: function() {\n      console.log(this.rank);\n      if(this.rank) {\n        return  'Your password is in the top ' + this.rank + ' most common passwords';\n      } else {\n        return 'Your password is not in the top 10,000 most common passwords.';\n      }\n    },\n    apiResult: function() {\n      return {\n        text: this.text,\n        strength: this.prettyStrength(),\n        score: this.score,\n        rank: this.rank,\n        rankDescription: this.rankDescription(),\n        textLength: this.textLength,\n        containsLowercase: this.containsLowercase,\n        containsUppercase: this.containsUppercase,\n        containsNumbers: this.containsNumbers,\n        containsSymbols: this.containsSymbols \n      }\n    }\n\n  }\n});\n\nexport default Password;\n"]}