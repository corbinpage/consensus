{"version":3,"sources":["../../src/api/display-reviews.js"],"names":["config","db","id","load","req","callback","sourceCode","read","res","json"],"mappings":";;;;;;AAAA;;;;;;kBAEe;AAAA,MAAGA,MAAH,QAAGA,MAAH;AAAA,MAAWC,EAAX,QAAWA,EAAX;AAAA,SAAoB,wCAAS;;AAE1C;AACAC,QAAK,YAHqC;;AAK1C;;;AAGCC,QARyC,gBAQpCC,GARoC,EAQ/BF,EAR+B,EAQ3BG,QAR2B,EAQjB;AACvBA,eAAS,IAAT,EAAeC,UAAf;AACD,KAVyC;;;AAY1C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACAC,QA5B0C,uBA4BrBC,GA5BqB,EA4BhB;AAAA,UAAnBF,UAAmB,SAAnBA,UAAmB;;AACxBE,UAAIC,IAAJ,CAAUH,UAAV;AACD;AA9ByC,GAAT,CAApB;AAAA,C","file":"display-reviews.js","sourcesContent":["import resource from 'resource-router-middleware';\n\nexport default ({ config, db }) => resource({\n\n  /** Property name to store preloaded entity on `request`. */\n  id : 'sourceCode',\n\n  /** For requests with an `id`, you can auto-load the entity.\n   *  Errors terminate the request, success sets `req[id] = data`.\n   */\n   load(req, id, callback) {\n    callback(null, sourceCode)\n  },\n\n  /** GET / - List all entities */\n  // index({ params }, res) {\n  //   db.models.password.findAll().then(function(passwords) {\n  //     console.log(passwords);\n  //     res.json(passwords);\n  //   })\n  // },\n\n  /** POST / - Create a new entity */\n  // create({ body }, res) {\n  //   body.id = db.models.password.length.toString(36);\n  //   db.models.password.push(body);\n  //   res.json(body);\n  // },\n\n  /** GET /:id - Return a given entity */\n  read({ sourceCode }, res) {\n    res.json( sourceCode )  \n  },\n\n  /** PUT /:id - Update a given entity */\n  // update({ password, body }, res) {\n  //   for (let key in body) {\n  //     if (key!=='id') {\n  //       password[key] = body[key];\n  //     }\n  //   }\n  //   res.sendStatus(204);\n  // },\n\n  /** DELETE /:id - Delete a given entity */\n  // delete({ password }, res) {\n  //   db.models.password.splice(db.models.password.indexOf(password), 1);\n  //   res.sendStatus(204);\n  // }\n});\n"]}