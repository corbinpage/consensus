{"version":3,"sources":["../../src/api/display-review.js"],"names":["config","db","id","load","req","callback","sourceCode","err","index","res","params","json","read","sendFile","resolve"],"mappings":";;;;;;AAAA;;;;AACA;;;;;;kBAGe;AAAA,MAAGA,MAAH,QAAGA,MAAH;AAAA,MAAWC,EAAX,QAAWA,EAAX;AAAA,SAAoB,wCAAS;;AAE1C;AACAC,QAAK,YAHqC;;AAK1C;;;AAGCC,QARyC,gBAQpCC,GARoC,EAQ/BF,EAR+B,EAQ3BG,QAR2B,EAQjB;AACvB,UAAIC,aAAaJ,EAAjB;AAAA,UACAK,MAAMD,aAAa,IAAb,GAAoB,WAD1B;AAEAD,eAASE,GAAT,EAAcD,UAAd;AACD,KAZyC;;;AAc1C;AACAE,SAf0C,wBAexBC,GAfwB,EAenB;AAAA,UAAfC,MAAe,SAAfA,MAAe;;AACrBD,UAAIE,IAAJ,CAAUD,MAAV;AACD,KAjByC;;;AAmB1C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACAE,QA3B0C,uBA2BrBH,GA3BqB,EA2BhB;AAAA,UAAnBH,UAAmB,SAAnBA,UAAmB;;AACxB;AACAG,UAAII,QAAJ,CAAa,eAAKC,OAAL,CAAa,sBAAb,CAAb;AACD;AA9ByC,GAAT,CAApB;AAAA,C","file":"display-review.js","sourcesContent":["import resource from 'resource-router-middleware';\nimport path from 'path';\n\n\nexport default ({ config, db }) => resource({\n\n  /** Property name to store preloaded entity on `request`. */\n  id : 'sourceCode',\n\n  /** For requests with an `id`, you can auto-load the entity.\n   *  Errors terminate the request, success sets `req[id] = data`.\n   */\n   load(req, id, callback) {\n    let sourceCode = id,\n    err = sourceCode ? null : 'Not found';\n    callback(err, sourceCode);\n  },\n\n  /** GET / - List all entities */\n  index({ params }, res) {\n    res.json( params ) \n  },\n\n  /** POST / - Create a new entity */\n  // create({ body }, res) {\n  //   body.id = db.models.password.length.toString(36);\n  //   db.models.password.push(body);\n  //   res.json(body);\n  // },\n\n  /** GET /:id - Return a given entity */\n  read({ sourceCode }, res) {\n    // res.json( sourceCode )  \n    res.sendFile(path.resolve('src/views/forum.html'))\n  },\n\n  /** PUT /:id - Update a given entity */\n  // update({ password, body }, res) {\n  //   for (let key in body) {\n  //     if (key!=='id') {\n  //       password[key] = body[key];\n  //     }\n  //   }\n  //   res.sendStatus(204);\n  // },\n\n  /** DELETE /:id - Delete a given entity */\n  // delete({ password }, res) {\n  //   db.models.password.splice(db.models.password.indexOf(password), 1);\n  //   res.sendStatus(204);\n  // }\n});\n"]}